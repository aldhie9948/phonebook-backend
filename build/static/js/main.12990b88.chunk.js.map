{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Notification.js","components/Filter.js","services/persons.js","App.js","index.js"],"names":["Persons","persons","deletePerson","map","person","name","number","onClick","id","PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Notification","notification","className","message","Filter","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","filterString","setStringFilter","setNotification","useEffect","personService","notifyWith","setTimeout","personsToShow","length","filter","p","toLowerCase","includes","event","target","preventDefault","existing","find","window","confirm","retunedPerson","addedPerson","concat","catch","error","console","log","toDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12990b88.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Persons = ({ persons, deletePerson }) => {\r\n  return persons.map((person) => (\r\n    <p key={person.id}>\r\n      {person.name} {person.number}\r\n      <button onClick={() => deletePerson(person.id)}>delete</button>\r\n    </p>\r\n  ));\r\n};\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.addPerson}>\r\n      <div>\r\n        name:\r\n        <input value={props.newName} onChange={props.handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number:\r\n        <input value={props.newNumber} onChange={props.handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (notification === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className={notification.type}>{notification.message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\n\r\nconst Filter = (props) => {\r\n  return <input value={props.value} onChange={props.onChange} />;\r\n};\r\n\r\nexport default Filter;\r\n","import axios from \"axios\";\r\nconst baseUrl = `http://localhost:3001/api/persons`;\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => {\r\n    return response.data;\r\n  });\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update, remove };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Persons from \"./components/Persons\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport Notification from \"./components/Notification\";\r\nimport Filter from \"./components/Filter\";\r\nimport personService from \"./services/persons\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [filterString, setStringFilter] = useState(\"\");\r\n  const [notification, setNotification] = useState(null);\r\n\r\n  useEffect(() => {\r\n    personService.getAll().then((data) => {\r\n      setPersons(data);\r\n    });\r\n  }, []);\r\n\r\n  const notifyWith = (message, type = \"success\") => {\r\n    setNotification({ message, type });\r\n    setTimeout(() => {\r\n      setNotification(null);\r\n    }, 5000);\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  const handleFilterStringChange = (event) => {\r\n    setStringFilter(event.target.value);\r\n  };\r\n\r\n  const deletePerson = (id) => {\r\n    const toDelete = persons.find((p) => p.id === id);\r\n    const ok = window.confirm(`Delete ${toDelete.name}`);\r\n    if (ok) {\r\n      personService\r\n        .remove(id)\r\n        .then((response) => {\r\n          setPersons(persons.filter((p) => p.id !== id));\r\n          notifyWith(`Deleted ${toDelete.name}`);\r\n        })\r\n        .catch(() => {\r\n          setPersons(persons.filter((p) => p.id !== id));\r\n          notifyWith(`${toDelete.name} had already been removed`, \"error\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault();\r\n\r\n    const existing = persons.find((p) => p.name === newName);\r\n    if (existing) {\r\n      const ok = window.confirm(\r\n        `${existing.name} already in phonebook, replace the old number with new one?`\r\n      );\r\n      if (ok) {\r\n        personService\r\n          .update(existing.id, {\r\n            name: existing.name,\r\n            number: newNumber,\r\n          })\r\n          .then((retunedPerson) => {\r\n            setPersons(\r\n              persons.map((person) =>\r\n                person.id !== existing.id ? person : retunedPerson\r\n              )\r\n            );\r\n            notifyWith(`Changed number of  ${existing.name}`);\r\n            setNewName(\"\");\r\n            setNewNumber(\"\");\r\n          });\r\n      }\r\n    } else {\r\n      personService\r\n        .create({\r\n          name: newName,\r\n          number: newNumber,\r\n        })\r\n        .then((addedPerson) => {\r\n          setPersons(persons.concat(addedPerson));\r\n          notifyWith(`Added ${newName}`);\r\n          setNewName(\"\");\r\n          setNewNumber(\"\");\r\n        })\r\n        .catch((error) => {\r\n          // p채채set k채siksi palvelimen palauttamaan virheilmoitusolioon n채in\r\n          console.log(error.response.data.error);\r\n          notifyWith(`${error.response.data.error} `, \"error\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const personsToShow =\r\n    filterString.length === 0\r\n      ? persons\r\n      : persons.filter((p) =>\r\n          p.name.toLowerCase().includes(filterString.toLowerCase())\r\n        );\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification notification={notification} />\r\n      filter shown with:\r\n      <Filter value={filterString} onChange={handleFilterStringChange} />\r\n      <h3>add a new</h3>\r\n      <PersonForm\r\n        handleNameChange={handleNameChange}\r\n        handleNumberChange={handleNumberChange}\r\n        newNumber={newNumber}\r\n        newName={newName}\r\n        addPerson={addPerson}\r\n      />\r\n      <h3>Numbers</h3>\r\n      <Persons persons={personsToShow} deletePerson={deletePerson} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}